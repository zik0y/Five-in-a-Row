{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\u5168\\u6808\\u5F00\\u53D1\\u4F5C\\u4E1A\\\\Five in a Row\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// 方块组件\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinningSquare\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${value} ${isWinningSquare ? \"winning\" : \"\"}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n// 棋盘组件\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  lastMoveIndex,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares, i);\n  }\n  const {\n    winner,\n    winningSquares\n  } = calculateWinner(squares) || {};\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (squares.every(Boolean)) {\n    status = \"Draw!\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const boardSize = 15;\n  const rows = Array.from({\n    length: boardSize\n  }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: Array.from({\n      length: boardSize\n    }, (_, colIndex) => {\n      const index = rowIndex * boardSize + colIndex;\n      const isWinningSquare = winningSquares === null || winningSquares === void 0 ? void 0 : winningSquares.includes(index);\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[index],\n        onSquareClick: () => handleClick(index),\n        isLastMove: index === lastMoveIndex,\n        isWinningSquare: isWinningSquare // Pass winning square info\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), rows]\n  }, void 0, true);\n}\n\n// 游戏组件\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const boardSize = 15;\n  const [history, setHistory] = useState([Array(boardSize * boardSize).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [lastMoveIndex, setLastMoveIndex] = useState(null);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares, index) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setLastMoveIndex(index);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setLastMoveIndex(null); // 重置高亮\n  }\n  function resetGame() {\n    setHistory([Array(boardSize * boardSize).fill(null)]);\n    setCurrentMove(0);\n    setLastMoveIndex(null);\n  }\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        lastMoveIndex: lastMoveIndex,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n// 计算胜利者的函数\n_s(Game, \"E9I2F6w3Yc2ErVUlYENTU0cdFis=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  const lines = [];\n\n  // 水平、垂直、对角线、反对角线检查\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col < boardSize; col++) {\n      const index = row * boardSize + col;\n      if (col <= boardSize - 5) {\n        // 水平方向\n        lines.push([index, index + 1, index + 2, index + 3, index + 4]);\n      }\n      if (row <= boardSize - 5) {\n        // 垂直方向\n        lines.push([index, index + boardSize, index + 2 * boardSize, index + 3 * boardSize, index + 4 * boardSize]);\n      }\n      if (row <= boardSize - 5 && col <= boardSize - 5) {\n        // 主对角线方向\n        lines.push([index, index + boardSize + 1, index + 2 * (boardSize + 1), index + 3 * (boardSize + 1), index + 4 * (boardSize + 1)]);\n      }\n      if (row <= boardSize - 5 && col >= 4) {\n        // 反对角线方向\n        lines.push([index, index + boardSize - 1, index + 2 * (boardSize - 1), index + 3 * (boardSize - 1), index + 4 * (boardSize - 1)]);\n      }\n    }\n  }\n\n  // 检查是否存在胜利的五子连珠\n  for (const [a, b, c, d, e] of lines) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\n      return {\n        winner: squares[a],\n        winningSquares: [a, b, c, d, e] // 返回获胜的方块索引\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinningSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","lastMoveIndex","onPlay","handleClick","i","calculateWinner","nextSquares","slice","winner","winningSquares","status","every","Boolean","boardSize","rows","Array","from","length","_","rowIndex","colIndex","index","includes","isLastMove","_c2","Game","_s","history","setHistory","fill","currentMove","setCurrentMove","setLastMoveIndex","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","resetGame","moves","map","move","description","_c3","lines","row","col","push","a","b","c","d","e","$RefreshReg$"],"sources":["D:/web全栈开发作业/Five in a Row/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\n// 方块组件\nfunction Square({ value, onSquareClick, isWinningSquare }) {\n  return (\n    <button\n      className={`square ${value} ${isWinningSquare ? \"winning\" : \"\"}`}\n      onClick={onSquareClick}\n    >\n      {value}\n    </button>\n  );\n}\n\n// 棋盘组件\nfunction Board({ xIsNext, squares, lastMoveIndex, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? \"X\" : \"O\";\n    onPlay(nextSquares, i);\n  }\n\n  const { winner, winningSquares } = calculateWinner(squares) || {};\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (squares.every(Boolean)) {\n    status = \"Draw!\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  const boardSize = 15;\n  const rows = Array.from({ length: boardSize }, (_, rowIndex) => (\n    <div key={rowIndex} className=\"board-row\">\n      {Array.from({ length: boardSize }, (_, colIndex) => {\n        const index = rowIndex * boardSize + colIndex;\n        const isWinningSquare = winningSquares?.includes(index);\n        return (\n          <Square\n            key={index}\n            value={squares[index]}\n            onSquareClick={() => handleClick(index)}\n            isLastMove={index === lastMoveIndex}\n            isWinningSquare={isWinningSquare} // Pass winning square info\n          />\n        );\n      })}\n    </div>\n  ));\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {rows}\n    </>\n  );\n}\n\n// 游戏组件\nexport default function Game() {\n  const boardSize = 15;\n  const [history, setHistory] = useState([\n    Array(boardSize * boardSize).fill(null),\n  ]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [lastMoveIndex, setLastMoveIndex] = useState(null);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares, index) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setLastMoveIndex(index);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setLastMoveIndex(null); // 重置高亮\n  }\n\n  function resetGame() {\n    setHistory([Array(boardSize * boardSize).fill(null)]);\n    setCurrentMove(0);\n    setLastMoveIndex(null);\n  }\n\n  const moves = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          lastMoveIndex={lastMoveIndex}\n          onPlay={handlePlay}\n        />\n      </div>\n      <div className=\"game-info\">\n        <button onClick={resetGame}>Restart Game</button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// 计算胜利者的函数\nfunction calculateWinner(squares) {\n  const boardSize = 15;\n  const lines = [];\n\n  // 水平、垂直、对角线、反对角线检查\n  for (let row = 0; row < boardSize; row++) {\n    for (let col = 0; col < boardSize; col++) {\n      const index = row * boardSize + col;\n\n      if (col <= boardSize - 5) {\n        // 水平方向\n        lines.push([index, index + 1, index + 2, index + 3, index + 4]);\n      }\n      if (row <= boardSize - 5) {\n        // 垂直方向\n        lines.push([\n          index,\n          index + boardSize,\n          index + 2 * boardSize,\n          index + 3 * boardSize,\n          index + 4 * boardSize,\n        ]);\n      }\n      if (row <= boardSize - 5 && col <= boardSize - 5) {\n        // 主对角线方向\n        lines.push([\n          index,\n          index + boardSize + 1,\n          index + 2 * (boardSize + 1),\n          index + 3 * (boardSize + 1),\n          index + 4 * (boardSize + 1),\n        ]);\n      }\n      if (row <= boardSize - 5 && col >= 4) {\n        // 反对角线方向\n        lines.push([\n          index,\n          index + boardSize - 1,\n          index + 2 * (boardSize - 1),\n          index + 3 * (boardSize - 1),\n          index + 4 * (boardSize - 1),\n        ]);\n      }\n    }\n  }\n\n  // 检查是否存在胜利的五子连珠\n  for (const [a, b, c, d, e] of lines) {\n    if (\n      squares[a] &&\n      squares[a] === squares[b] &&\n      squares[a] === squares[c] &&\n      squares[a] === squares[d] &&\n      squares[a] === squares[e]\n    ) {\n      return {\n        winner: squares[a],\n        winningSquares: [a, b, c, d, e], // 返回获胜的方块索引\n      };\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}